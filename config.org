#+TITLE: Emacs Configuration
#+PROPERTY: header-args :tangle init.el
#+auto_tangle: yes

* 包管理

使用 use-package 和 straight.el。

#+begin_src emacs-lisp
  (setq package-archives '(("gnu"   . "http://1.15.88.122/gnu/")
			   ("melpa" . "http://1.15.88.122/melpa/")))
#+end_src

添加 straight 支持，主要是为了在 use-package 中使用。

#+begin_src emacs-lisp
  (defvar bootstrap-version)
  (let ((bootstrap-file
	 (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
	(bootstrap-version 6))
    (unless (file-exists-p bootstrap-file)
      (with-current-buffer
	  (url-retrieve-synchronously
	   "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el"
	   'silent 'inhibit-cookies)
	(goto-char (point-max))
	(eval-print-last-sexp)))
    (load bootstrap-file nil 'nomessage))

  ;; Set up use-package for tidier package configuration/installation
  (straight-use-package 'use-package)
  (setq straight-use-package-by-default t)

  ;; Add diminish, which makes it easier to customize lighters (minor mode display)
  (use-package diminish)
#+end_src

* 快捷方式

更方便的 hacking emacs...

#+begin_src emacs-lisp
  (defun reload-init-file ()
    "Reload init file with <f5>."
    (interactive)
    (load-file "~/.emacs.d/init.el"))

  (setq custom-file (expand-file-name "custom.el" user-emacs-directory))
  (and (file-readable-p custom-file) (load custom-file))

  (defun gcl/open-init-file()
    (interactive)
    (find-file (expand-file-name "config.org" user-emacs-directory)))

  (global-set-key (kbd "<f5>") 'reload-init-file)
  (global-set-key (kbd "<f1>") 'gcl/open-init-file)
  (global-set-key (kbd "<f2>") 'restart-emacs)
#+end_src
